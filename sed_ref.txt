#references for Sed commands

sed 's/.*string//' #search are remove all string from starting of line to match string
sed 's/string*.//' #search are remove all string from match string to end of line
sed 's/old_str/new_str/g' #general command to search and replace for all occurances in a file
sed '/cdef/r add.txt' input.txt #insert lines from "add.txt" to the file "input.txt" after the string "cdef"
sed -i '2r file1.txt' file2.txt # insert file at specific line
sed '/pattern/d' file #delete lines that matches with the pattern
sed '2d' file # delete 2nd line
sed 'n; d' infile > outputfile #Remove ODD lines
sed '1d; n; d' infile > outputfile #  remove EVEN lines only
sed '2,5d' #remove from line num 2 to 5

#To insert new line after match
sed '/pattern/a \new_line_string' file #a--> for append
sed '/pattern/i \new_line_string' file #i--> insert line before match

#return line number
sed -n '/pattern/=' $file

awk:
awk 'NR%2==0' infile > outfile # remove line no % 2 == 0

#recursive search and replace
find . -type f -print0 | xargs -0 sed -i '/pattern/d'

#Insert at line number
sed -i '8i This is Line 8' FILE ##insert at line number 8

#delete first charater of file
sed 's/^.//' file #1st character
sed 's/^..//' file #First 2 characters
sed 's/^...//' file #first 3 characters

## remove everything in between the () brackets
sed -e '/(/{' -e ':loop;s/(.*)/()/;t;N;b loop' -e '}'   

#remove contents inside including {}
sed '/{/{:1;N;s/{.*}//;T1}' file

#search for "byte sequence {" from that point to next "}", deletes everything
sed 'byte sequence /{:a;N;/\}/d;ba}' file

#remove lines from beginning to pattern matching ( only in bash it is working, tcsh uses previous command)
sed '/sweet/,$!d' file
